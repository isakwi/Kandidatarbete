from matplotlib import pyplot as plt
import matplotlib
import re 
import numpy as np


def reWriteVector(vec):
    vec = re.sub(' +', ' ', vec) # removes eccess blank spaces
    vec = vec.replace(" ", ",") # replaces the last blank space with a comma
    vec = vec[1:] # removes the first character i.e. '['
    vec = vec[:-1] # same for the last ']'
    #print(vec)
    vec = [float(n) for n in vec[1:-1].split(",")] # creates list of floats from the string
    return vec

def reWriteMatrix(mat):
    mat = mat.replace('\n', "") # removes \n from the exp_mat matrix
    mat = re.sub(' +', ' ', mat) # removes eccess blank spaces
    mat = mat.replace(" ", ",") # replaces the last blank space with a comma
    #mat = mat.replace("[", "")
    #mat = mat.replace("]","")
    mat = mat[2:]
    mat = mat[:-1]
    #mat = re.sub("]", "]]", mat)
    #print(mat)
    rows = re.split("[\]\[]", mat)
    rows = list(filter((",").__ne__, rows))
    #print(rows)
    #matrix = np.zeros((len(rows),len(rows[1])))
    matriz = []
    for i in range(1,len(rows)-1):
        #matrix[i] = [float(n) for n in mat[1:-1].split(",")] # creates list of floats from the string
        row = rows[i]
        #print(i)
        #print(row,"hej")
        #row = row[1:] # removes the first character i.e. '['
        #row = row[:-1] # same for the last ']'
        row = row + ","
        matrix_row = [float(n) for n in row[1:-1].split(",")] # creates list of floats from the string
        #print(matrix_row)
        matriz.append(matrix_row)
    mat = matriz
    return mat

def generateMatrices(file_a, file_b, file_c, file_d):
    with open(file_b) as f: # Reads the entire file as one string
        content_b = f.read()

    with open(file_c) as f: # Reads the entire file as one string
        content_c = f.read()

    with open(file_d) as f:
        content_d = f.read()

    with open(file_a) as f:
        content_a = f.read()

    # Splits the text document into multiple strings with the different data
#    str1, gamma_vec_a, beta_vec_a, exp_mat_a, minima_a, coord_a, beta_vec_a, zz_a, zo_a, oz_a, oo_a = re.split(".+=", content_a)
    #str1, gamma_vec_a, beta_vec_a, exp_mat_a, minima_a, coord_a = re.split(".+=", content_a)
    str1, gamma_vec_a, beta_vec_a, exp_mat_a, minima_a, coord_a, str2, beta_vec_b, cost_vec_a, zz_a, zo_a, oz_a, oo_a, minima_a = re.split(".+=", content_a) # not correct, only went for correct number of terms
    str1, gamma_vec_b, beta_vec_b, exp_mat_b, minima_b, coord_b, str2, beta_vec_b, cost_vec_b, zz_b, zo_b, oz_b, oo_b, minima_b = re.split(".+=", content_b)

    str1, gamma_vec_c, beta_vec_c, exp_mat_c, minima_c, coord_c, str2, beta_vec_c, cost_vec_c, zz_c, zo_c, oz_c, oo_c, minima_c  = re.split(".+=", content_c)

    str1, gamma_vec_d, beta_vec_d, exp_mat_d, minima_d, coord_d, str2, beta_vec_d, cost_vec_d, zz_d, zo_d, oz_d, oo_d, minima_d  = re.split(".+=", content_d)

    exp_mat_a = reWriteMatrix(exp_mat_a)
    exp_mat_b = reWriteMatrix(exp_mat_b)
    exp_mat_c = reWriteMatrix(exp_mat_c)
    exp_mat_d = reWriteMatrix(exp_mat_d)
    return exp_mat_a, exp_mat_b, exp_mat_c, exp_mat_d



if __name__ == "__main__":
    matplotlib.rcParams.update({'font.size': 12, 'text.usetex': True})

    with open("benchmarkDATA&PLOTS/plotdata_b_6161Ed.txt") as f: # Reads the entire file as one string
        content_b = f.read()

    with open("benchmarkDATA&PLOTS/plotdata_c_Isak61x61final.txt") as f: # Reads the entire file as one string
        content_c = f.read()

    with open("benchmarkDATA&PLOTS/plotdata_d_6161Ed.txt") as f:
        content_d = f.read()

    with open("benchmarkDATA&PLOTS/plotdata_a_Isak61x61final.txt") as f:
        content_a = f.read()

    # Splits the text document into multiple strings with the different data
    str1, gamma_vec_a, beta_vec_a, exp_mat_a, minima_a, coord_a, str2, beta_vec_b, cost_vec_a, zz_a, zo_a, oz_a, oo_a, minima_a = re.split(".+=", content_a) # not correct, only went for correct number of terms
    str1, gamma_vec_b, beta_vec_b, exp_mat_b, minima_b, coord_b, str2, beta_vec_b, cost_vec_b, zz_b, zo_b, oz_b, oo_b, minima_b = re.split(".+=", content_b)
    str1, gamma_vec_c, beta_vec_c, exp_mat_c, minima_c, coord_c, str2, beta_vec_c, cost_vec_c, zz_c, zo_c, oz_c, oo_c, minima_c  = re.split(".+=", content_c)
    str1, gamma_vec_d, beta_vec_d, exp_mat_d, minima_d, coord_d, str2, beta_vec_d, cost_vec_d, zz_d, zo_d, oz_d, oo_d, minima_d  = re.split(".+=", content_d)

    '''Betaplot DATA'''
    cost_vec_a = [-0.013469406010308323, 0.021742574907017486, 0.05805494906946306, 0.09159157636220899, 0.12278294286310912, 0.1402469239718355, 0.1541005936432979, 0.15003992948645245, 0.1421030426966475, 0.11737008791234242, 0.08580807659754076, 0.04202289883207507, -0.005692025103326163, -0.06397589174387781, -0.12180535408153949, -0.1880248396192448, -0.2478846670064072, -0.3042482539754412, -0.3548176814722209, -0.39667774029479186, -0.4299582140187943, -0.4463731911149137, -0.44998251352728585, -0.4338849912733524, -0.4127018122587082, -0.37209023679084763, -0.3177916470459783, -0.25188778614431895, -0.17776799828405887, -0.0976361971036115, -0.011174045732954255, 0.07486926956276582, 0.15629071117174506, 0.23920617566856694, 0.313598292824919, 0.36477477874299724, 0.42682575095467107, 0.46188733096122697, 0.4836971867123217, 0.49432090609473633, 0.4866633856592028, 0.46828283756741607, 0.4303149255305712, 0.38542990338644667, 0.33106947150192567, 0.2722514701247685, 0.20724551122011328, 0.14165661740199084, 0.07785569590357597, 0.018430539805222333, -0.0339990894932966, -0.07727587821279995, -0.11381773879805641, -0.13594364240659582, -0.14473907203949515, -0.14874127149391514, -0.13607640500575047, -0.11579261780565864, -0.0880725192464514, -0.05397170094398979, -0.01733523974706899]
    zz_a = [0.24506983658295114, 0.2622342664051867, 0.27919849546062253, 0.2930545333367382, 0.3067465410694634, 0.3137166060890884, 0.3195543461588994, 0.3149888685261464, 0.3098837575997395, 0.29632364515083787, 0.27836347980186416, 0.2557155088659199, 0.23073446338147072, 0.2000935248917641, 0.17091410163520954, 0.13585274107516607, 0.10576467957367126, 0.07667223948596877, 0.05098290925500856, 0.030351773501173258, 0.013212340816069501, 0.006092100035353816, 0.003565768726605306, 0.01304074587619924, 0.02327402780094778, 0.04461529422870958, 0.07214064774098546, 0.10625679010973763, 0.14487740788464232, 0.1858668667656104, 0.22958837596728182, 0.27482536201567553, 0.31694461582019506, 0.3598549532873077, 0.39862342197563055, 0.4254422744848591, 0.4579951200939515, 0.47668391302326124, 0.49022988471673123, 0.4968849268358205, 0.49453976993347865, 0.487176260300202, 0.4686989616236364, 0.44683823489560304, 0.42082553776067066, 0.3927563561704258, 0.3611365970682503, 0.3278466491603678, 0.2966944852523471, 0.2676822546234584, 0.24100929972872512, 0.2185902339445417, 0.20038725484528447, 0.19037608153169286, 0.18467596131115102, 0.18196096962290545, 0.1878286248285171, 0.19677640655537396, 0.2099247265736357, 0.22636915895761697, 0.24328908550192377]
    zo_a = [0.2610040518407823, 0.21585059458928102, 0.17204706112630075, 0.1318357868526968, 0.0975913986021358, 0.06409994138188185, 0.04092175440956454, 0.017837173786544723, 0.007250434484861648, 0.002827951826423899, 0.00362144840760189, 0.013727335227781861, 0.03128559371597371, 0.05205946264455688, 0.07851936183093974, 0.1071993603296396, 0.1393449731713139, 0.1724290775224764, 0.2036428848109701, 0.23097996468438647, 0.25748403773484196, 0.27841648374352734, 0.2966341425056055, 0.3073936318117484, 0.31384472135970803, 0.313659123930941, 0.3079914467935224, 0.2990094163043155, 0.2851793223434991, 0.26887277050796693, 0.25104752194043206, 0.2320069868708327, 0.21188467506783024, 0.1961160065125782, 0.18312384888816888, 0.17358565386027075, 0.17089299710251754, 0.16985344168486108, 0.1755598639168392, 0.18826702210029528, 0.20518619201272206, 0.2275797122066798, 0.2536872559290522, 0.28410927154555393, 0.3150214271744411, 0.3472636617724804, 0.37803165292313656, 0.40878770015045574, 0.4349726441747144, 0.4541680984083216, 0.47143019784495516, 0.4797920592901606, 0.48251071029652803, 0.4749303734163002, 0.46448566994668866, 0.44349780745627915, 0.4162050579059324, 0.3847773258347608, 0.3466811822303686, 0.30458516583785705, 0.26078332346702493]
    oz_a = [0.258540229358503, 0.23725774903978605, 0.21626785376808766, 0.19956923600428947, 0.18398646816603292, 0.17345543378394188, 0.16544287486172915, 0.16497758376892938, 0.16778019969337854, 0.17884745166711796, 0.192559050423336, 0.21369561454530545, 0.23643055962228637, 0.26406875032895716, 0.2927078545037558, 0.3238741706833289, 0.35364582227651264, 0.38091617317141957, 0.4058008955291315, 0.42708597555724276, 0.44316490155275834, 0.4525123646869815, 0.4535428980105359, 0.44702238173509995, 0.4360237243004765, 0.41670004454684445, 0.38992591529267506, 0.3581668194536008, 0.3226419493695923, 0.28350009218716066, 0.2412498676469347, 0.19996417283443854, 0.16065127982133462, 0.12064623134169655, 0.08502335538693001, 0.060665656437967466, 0.03116901869021683, 0.014927574356075985, 0.0065321833630519275, 0.002564176511639003, 0.007876394637975846, 0.018889261301079954, 0.03838554739006183, 0.0614095399136745, 0.08975826545530646, 0.12050659553111698, 0.15387284503159834, 0.1861925471810783, 0.21884112381713328, 0.2492558916528165, 0.2749848087067755, 0.2957272186350307, 0.3142067459497359, 0.32631122265667434, 0.32941471720902765, 0.33070500383908485, 0.32378435963207924, 0.3125713065508235, 0.29794791883071253, 0.28016089666169686, 0.26062573612228]
    oo_a = [0.2353804183470332, 0.28018017878205226, 0.32265516196075805, 0.3680920745628251, 0.40964770720396293, 0.4486811195130589, 0.47387469634833435, 0.5020895402274234, 0.5150804293543187, 0.5217432496043068, 0.5254420623570816, 0.5168494070839993, 0.5015277102532609, 0.48377461844890995, 0.4577411735171762, 0.4328546156970098, 0.4012395025883714, 0.36996990527612633, 0.33955638065534766, 0.3114266022870179, 0.28613026016364357, 0.26289057980224867, 0.24624985417756068, 0.2324004387751569, 0.22678904098473596, 0.22501806274065678, 0.22993272890079403, 0.23653342746035996, 0.24729401596363176, 0.2617558662749099, 0.2776150324411603, 0.29318710352392874, 0.31051453770736087, 0.32337676511835944, 0.33322467033624903, 0.3403009827440849, 0.3399366072753631, 0.33835217293381076, 0.3276724017917385, 0.31227884520794147, 0.29239256077798786, 0.26634421097532723, 0.239220630178805, 0.20763702198845976, 0.17438830245432285, 0.13946838912399803, 0.10675636390372303, 0.07716812995189228, 0.049486574795415454, 0.028884498221479614, 0.012518250956172561, 0.00564373797425672, 0.0028886026171813252, 0.00836188510290259, 0.02141748861010713, 0.043831221889875836, 0.07204205145129607, 0.10586996145430769, 0.14538828367047418, 0.1886968426116997, 0.23529665460107146]

    cost_vec_b = [0.008146254159136817, -0.09348667197120208, -0.2074984451482798, -0.30249362349324554, -0.39635645135129255, -0.48594943742325775, -0.5680211423089279, -0.6603691077273408, -0.7172742720297751, -0.7942619090344856, -0.852031770356522, -0.8874411578181888, -0.9318060205308758, -0.9635730586107927, -0.987156893076143, -0.9916450072180932, -0.9852873918091375, -0.9740263703582682, -0.9456140950050934, -0.9118773976589912, -0.8613346037498979, -0.8051670142530374, -0.7449389827340471, -0.6670755298858596, -0.588252334738785, -0.5034024004841484, -0.41420231669211877, -0.3138578186297359, -0.21836904424757675, -0.11352715750831337, -0.017221268561676793, 0.09828312822187724, 0.19398389338270106, 0.2941460735163664, 0.39933361886247465, 0.48968208939966573, 0.5717416163731566, 0.6614271726184141, 0.7281719905282478, 0.8048543152671302, 0.8569446065562506, 0.9068572464265049, 0.9411206132564244, 0.9647251050738029, 0.9935654105868748, 0.9955666561491678, 0.9893678292428658, 0.9704726918225334, 0.9494860360257679, 0.9135232487363224, 0.8609578056173707, 0.8094951251003334, 0.7445401695303199, 0.6699747646910369, 0.5859323845602761, 0.5094570340380898, 0.41329651948412743, 0.3173180587991815, 0.2148746133738296, 0.11653520063009039, 0.011066976869191631]
    zz_b = [0.2539119843747559, 0.22708008460334272, 0.19795404464486177, 0.17191211067442133, 0.14578660407891939, 0.12242164502050949, 0.10154857516705872, 0.07880208839485331, 0.06501663444120291, 0.04690959506829024, 0.03335626650363403, 0.025213440445601313, 0.01521084503159093, 0.008109382705643075, 0.0028620119735797713, 0.001869985856325773, 0.003284777696818975, 0.005563142128455352, 0.011644643098900787, 0.018888265702011544, 0.02968169328382911, 0.04175850400780362, 0.0547907747323449, 0.07187696619180495, 0.08926734957022853, 0.10851983446351501, 0.1288151135644252, 0.15241025579111755, 0.17528657507796158, 0.20079294191042027, 0.2249869987777175, 0.25417603103516295, 0.27886272155570774, 0.3062912629336004, 0.33565377348687425, 0.36050766662938805, 0.38445034875804884, 0.41073827994855855, 0.43149164481294644, 0.45494732513794733, 0.4721994613086338, 0.48883680186519773, 0.5009018492642056, 0.5106491312352077, 0.5215010944702236, 0.5238734978092933, 0.5242699946820407, 0.5214914812901302, 0.5172181886553848, 0.5077096076406743, 0.49259159433247635, 0.4786816442154434, 0.46091477985609813, 0.4395462471368894, 0.4156662826288306, 0.3942332111175315, 0.36608498040829157, 0.33960125168140215, 0.3114304692105675, 0.2836357089390226, 0.2547996660423269]
    zo_b = [0.2501598967303398, 0.22756260869681483, 0.20186591657134836, 0.17987685351893318, 0.15702057893424234, 0.1346579198268206, 0.11449338905869424, 0.0910459564732565, 0.07634763979696618, 0.0559985305731593, 0.040631706568133655, 0.031067658459210015, 0.018889299152201475, 0.010105187459104407, 0.0035606255697514383, 0.0023091377710327747, 0.004071440309078433, 0.007423803772312096, 0.01554893034356471, 0.02517395935413042, 0.039651408310556836, 0.055658487154631106, 0.07273960322161042, 0.09458556835092954, 0.11660650470171614, 0.13977872981631065, 0.16408403149131628, 0.19066069318236376, 0.2155288355159104, 0.24244364116111927, 0.2664020568146713, 0.2949655365123498, 0.31812915230517397, 0.3407814412173762, 0.36401303634376453, 0.38433306208845286, 0.40142010065584793, 0.41997521487582273, 0.4325939168418416, 0.44747960409121024, 0.4562725875597106, 0.46459127758086916, 0.4696519507720294, 0.4717124373432688, 0.4752812270060197, 0.4739094611341913, 0.4704132615927442, 0.4637440848580203, 0.45752382241909184, 0.44905164890715915, 0.4378871594636041, 0.4260653914346794, 0.41135433410250927, 0.39543101044930973, 0.3772990879776053, 0.36049423141927256, 0.3405620804791988, 0.3190575175423355, 0.2960047978554654, 0.27463109541430997, 0.2507338490904834]
    oz_b = [0.24979991310875635, 0.2700451631113042, 0.29210557353274474, 0.3129672983575174, 0.3345860985044059, 0.3536060418278576, 0.36795768912070087, 0.38513863846541063, 0.3938971391851173, 0.40697532951151444, 0.41561759831157413, 0.41946161070908644, 0.42549164919066595, 0.4290400702113279, 0.43147322626322354, 0.4298237624266355, 0.4265293388437895, 0.4225479305804254, 0.4165242496028345, 0.40834808976058795, 0.39772119176618614, 0.38655302394897867, 0.3747831746521116, 0.35983585626737047, 0.34414892710055905, 0.3284562354965422, 0.3111416175624731, 0.29183601360377937, 0.27319532361259397, 0.2522681019589092, 0.23285987016281115, 0.2086822399204983, 0.18824325899425498, 0.16705931304593147, 0.14408192514160822, 0.12349752356295145, 0.10463878174169347, 0.08370605368187051, 0.06777238990457368, 0.04919363045378824, 0.036346454096445296, 0.023877166845394777, 0.014985222903763539, 0.00911968302676599, 0.0016836908889944376, 0.0011637507539472586, 0.0027321982323481398, 0.007753940521360336, 0.013364217280571446, 0.022871840894128567, 0.03673143284746001, 0.05031152254180802, 0.06746676793995499, 0.0868236382192677, 0.10852893863340603, 0.1281587501600646, 0.15197212331020454, 0.17599764211501648, 0.20123689021715335, 0.22445836377146733, 0.249229997375045]
    oo_b = [0.24612571893660234, 0.2706488531149979, 0.2978738173459736, 0.3276226628830623, 0.3605473403194631, 0.3892573878709637, 0.4158124625735927, 0.44491602100212574, 0.46473423588030777, 0.49005374379397565, 0.5103822451427487, 0.5242523401048398, 0.5403946973583695, 0.5527433475028632, 0.5621002271376706, 0.5659922674101021, 0.566112560724409, 0.5644608547096145, 0.5562791700746377, 0.5475834348747735, 0.5329431673537998, 0.516028980400455, 0.4976852790434781, 0.4736987295455528, 0.44997522287915553, 0.42324247437829593, 0.39595734957800616, 0.36509228419238293, 0.33598687949073003, 0.30449446320618506, 0.2757486113748712, 0.24217375809666583, 0.21476265114234291, 0.18586622742445563, 0.1562500897242312, 0.13166059486717516, 0.10948904871020879, 0.08557957875490607, 0.06814083525692205, 0.04837835296490452, 0.03518056561097788, 0.022693266629604945, 0.014453546077518555, 0.008515960314070519, 0.0015328575841262108, 0.001052021092066456, 0.0025829543896875445, 0.0070086322671411025, 0.011891511521520095, 0.02036575719173569, 0.03278873116888416, 0.04493994847595616, 0.060262211494127214, 0.07818613919579716, 0.09850378546874647, 0.11711178467652283, 0.1413784340491934, 0.16534233692398476, 0.19132470198041074, 0.21727281660494668, 0.2452354894039559]

    cost_vec_c = [0.008788505994411723, -0.10126474507523621, -0.2092410037105206, -0.30586354699395135, -0.3997750126614635, -0.48846499877397986, -0.5786166073504978, -0.6570674387245724, -0.7293446005574287, -0.8002445005223677, -0.8588909036954804, -0.9075143957460522, -0.9439906225014593, -0.972356274551642, -0.9865655655422001, -0.9950700460805539, -0.9881329946710464, -0.9691189887502828, -0.9444413678609385, -0.9119764933669487, -0.8618920128508348, -0.8095834821084626, -0.7434985291528081, -0.6721943609993585, -0.5908636754404076, -0.5039759678794322, -0.41292440138193076, -0.3169596608728905, -0.21415925791355556, -0.11342808069891183, -0.014060672174672703, 0.09725954030883523, 0.19799950604760347, 0.29610857267018004, 0.3973266657895973, 0.49240166403257657, 0.5774557873059366, 0.6594471282129253, 0.7309884388148894, 0.8003118002768572, 0.8526197579755145, 0.905810091096418, 0.9437145277599943, 0.9739283902283821, 0.9901277989755629, 0.9947519622365, 0.9852855025465167, 0.9765636268215003, 0.9481301244760804, 0.9004245760188248, 0.8652934991798665, 0.8096920367139439, 0.7435536706042383, 0.6752621820030507, 0.5951206704037748, 0.5093841748181888, 0.4159129599296155, 0.31599134169247806, 0.2178288451231447, 0.11473143892948395, 0.011585833855103667]
    zz_c = [0.25440882503987094, 0.2040743246594185, 0.16068742116901005, 0.12353826825298081, 0.09090469602255079, 0.06544417393079492, 0.04442505988965025, 0.029401535566755108, 0.018299448613213705, 0.009977905661221394, 0.004979539268485339, 0.0021360893391027115, 0.000781899721488078, 0.00018960047615588181, 3.3602788522331225e-05, 4.31671199789533e-06, 2.9902146657148847e-05, 0.00021827885189179498, 0.0007618727145077949, 0.0019353929091960828, 0.004763175337063738, 0.009062489481430638, 0.016447489196959424, 0.02686381855950411, 0.04184813194520555, 0.061511110953937194, 0.08616342251712193, 0.11663340602945868, 0.1543863826879309, 0.19650032175306614, 0.2430044030562521, 0.300994592250913, 0.358799652387208, 0.41996483922068173, 0.4881307782812767, 0.5568152064940319, 0.6220894362556111, 0.6884464316160438, 0.7490716666334953, 0.8102804962084593, 0.8580386715769048, 0.9080241727126147, 0.9445022710792734, 0.9741012612044554, 0.9901609359686834, 0.9947532974648863, 0.9861726132763246, 0.9767038424817299, 0.9488044570189792, 0.9028493979341811, 0.8698288076163977, 0.8187456327043786, 0.7599879286219982, 0.7016316723814157, 0.6361036747942282, 0.569559179611382, 0.5012038383384249, 0.43295435827676326, 0.3707763837730142, 0.31065716552423106, 0.2558331957316543]
    zo_c = [0.2506611902455006, 0.24682248375971894, 0.23877131470259957, 0.22808982091777832, 0.21070289194275016, 0.19202237572036324, 0.16693876364660662, 0.14429843937056477, 0.12017722999171257, 0.09074500321962935, 0.06579813028112716, 0.04401508178227179, 0.027938318198946183, 0.013990705076067998, 0.006494866186004139, 0.0030829695501664272, 0.007616733057931808, 0.016659324956836273, 0.02895163794940978, 0.042527800987182486, 0.06640953400170152, 0.08629586176200948, 0.11229705603936292, 0.13665504635163264, 0.16287537865644414, 0.18629951591791566, 0.20634957290190803, 0.22323489404927394, 0.23794460912762513, 0.2450508658276176, 0.24579283839311142, 0.24695199879776666, 0.2382531858532946, 0.22465719069532541, 0.20881749870905436, 0.18850052116679727, 0.16426873280262821, 0.14041109010078062, 0.1127723607698305, 0.08771242872528064, 0.06713333472539218, 0.04259000665842607, 0.024926915894082774, 0.011606530413316662, 0.0031800820295656116, 9.484435650723294e-05, 0.004786039654082777, 0.010567322124372254, 0.02316203323198338, 0.04688296235671629, 0.06058552718223611, 0.08378452609866872, 0.10888751719522369, 0.13560064979230582, 0.161011764789965, 0.1856079704927924, 0.20680641133433614, 0.2237418173517291, 0.23810204534811027, 0.2458042817082868, 0.2504899466624298]
    oz_c = [0.24931020771407947, 0.24637653956638142, 0.23719047904210105, 0.2247129611951866, 0.20965508923933066, 0.18872574450595975, 0.16572201473955608, 0.1399264587260505, 0.11388672093995587, 0.08909308496805342, 0.06536797701876836, 0.044202348522054374, 0.02652317898830569, 0.013278848149498855, 0.00687653899141313, 0.001845665281794609, 0.004191248047572139, 0.013789801804209544, 0.02508673569406963, 0.04162551660472882, 0.06217587501067744, 0.0859971558744754, 0.11131054435497331, 0.13742519352461413, 0.16256616177760935, 0.1867036716205044, 0.20840047221942812, 0.22653911463010143, 0.2391245126921564, 0.2485210770345605, 0.25413820796497955, 0.2483191083957696, 0.24214820832958162, 0.23152215627849984, 0.2122494179126436, 0.19027097112189303, 0.1690086355904354, 0.14214485140717528, 0.12007323094484242, 0.09203866673193502, 0.06941059406589746, 0.04717181465076395, 0.029783832085516545, 0.014119353651698708, 0.0066264158554318825, 0.005150526903879684, 0.008154263787136141, 0.012588634062558644, 0.027359562383260885, 0.047843454500077195, 0.06505088537949441, 0.08841656546128253, 0.11469044374021437, 0.13639855793497482, 0.1619017887448504, 0.18465809663263344, 0.2066992305775508, 0.22634118408027526, 0.23817448185171916, 0.24761336749946022, 0.2494405537721283]
    oo_c = [0.24561867965386966, 0.29796880068614895, 0.35240129425857974, 0.4148214045809696, 0.4859576500078232, 0.5536702955293483, 0.622752342665983, 0.6862583911461305, 0.7476262419702441, 0.8101411606074481, 0.8638370403128321, 0.9096416525205551, 0.9447402196054351, 0.9725357513062372, 0.9865907704313568, 0.9950597158692681, 0.9881613295860502, 0.9693272085305624, 0.9451960626652832, 0.9139106641320852, 0.8666471559520903, 0.8186428524216438, 0.7599436282272045, 0.6990532708065731, 0.6327085929917571, 0.5654839060106975, 0.4990847057803824, 0.4335918654921951, 0.3685426246106219, 0.3099265428876429, 0.25706353851160263, 0.20373263786262027, 0.1607972126501313, 0.12385453966649747, 0.090799485885157, 0.06441235405962484, 0.044631056810282385, 0.0289877560631067, 0.018081265847059116, 0.009966920475841015, 0.0054144227219725324, 0.0022127958216214693, 0.0007844495308337891, 0.00017175341753344894, 3.0372376680145368e-05, 1.8471416313920524e-07, 0.0008858919740256473, 0.00013910275731683318, 0.0006717398868378424, 0.002421085677936492, 0.004531849565821818, 0.009051075506596793, 0.01643300588816294, 0.026366592414597642, 0.04098162241373329, 0.06017372605540487, 0.08528929084222123, 0.11696131741200412, 0.1529448356011492, 0.19592383285267886, 0.24421394660022894]

    cost_vec_d = [-0.06856888810857546, 0.13794217548625112, 0.34266931435437625, 0.5261142475914308, 0.6914849982303, 0.8185283896971949, 0.9206782163644355, 0.9749261038310157, 0.9915674155615447, 0.9606172163683547, 0.8987052161413962, 0.7812412979380949, 0.6416607768154077, 0.472916011666209, 0.28299655057762024, 0.0823718049161786, -0.12306754039564857, -0.3215896935618913, -0.5077155784895699, -0.6700795961837419, -0.7995312604072953, -0.9022911789291149, -0.9540378864338952, -0.9641871695796431, -0.9386779565909351, -0.8671499424465229, -0.7592173818631822, -0.6193925651632474, -0.4489958786447496, -0.2587643535990017, -0.05383181462461075, 0.1491107307311646, 0.3453146551846139, 0.5308073116990927, 0.6915228524244005, 0.8242609046323774, 0.9220508913060387, 0.9754271895539682, 0.9953725266845166, 0.9617080461622906, 0.8869856788049019, 0.7809425996822968, 0.6361843055339214, 0.46086973262391495, 0.2698842565461412, 0.06911267000955047, -0.1380515480773901, -0.33529174316598276, -0.5196029447177564, -0.68017334872136, -0.819241102901452, -0.9193955070753064, -0.9753433729217462, -0.9874021569152587, -0.959851249282588, -0.891529634472331, -0.7844628705688603, -0.6408193408825564, -0.4693094400462886, -0.2776016236779596, -0.07317881070535791]
    zz_d = [0.23758216133241772, 0.2878042595671786, 0.3388268633496841, 0.38547748119168296, 0.42793699458096307, 0.46011052035729244, 0.4854823594262414, 0.5009035328197581, 0.5033573655023659, 0.4950476224618276, 0.47997255921121895, 0.4508493803830738, 0.41555106728850305, 0.37311651411753227, 0.32354593499366535, 0.2739810139707472, 0.22292806910595708, 0.17330911747883598, 0.1243818760556761, 0.08440522595486467, 0.05072726305027855, 0.02508293279649721, 0.011754235805040104, 0.007863444118511349, 0.013863000747142284, 0.03177752718528853, 0.058226505872036025, 0.0923371365979274, 0.1340294694863572, 0.182073794525528, 0.23258271334805056, 0.28276235639788366, 0.3289594449727955, 0.377230740385807, 0.4178374741935877, 0.45073460128759496, 0.47397368483388413, 0.48903396057204584, 0.4945730364239892, 0.4861503728577434, 0.4669846267346958, 0.43967644354036006, 0.40455869749809364, 0.36098763328195094, 0.31229008677230174, 0.26370774457195434, 0.21312984732116877, 0.16296348007312655, 0.11790122575701924, 0.07752136293428813, 0.04450472678312813, 0.019141648655729725, 0.0065408361032802485, 0.003401713227916993, 0.00965240488056014, 0.02866629815635249, 0.05597291378516985, 0.0932410240207904, 0.13553937132406374, 0.1844254537000161, 0.23771624245192863]
    zo_d = [0.2697326217317009, 0.21519988090680256, 0.16473274946094135, 0.1212692744780375, 0.07852586006271543, 0.04658836229426294, 0.020924708882258402, 0.006643773834453727, 0.0028590505605855005, 0.009691619663305185, 0.024929341656940537, 0.0539519798225412, 0.0888014066913338, 0.13020828987377, 0.1794664515529652, 0.22854385828911034, 0.27997584325209685, 0.32807179973878, 0.37660968757707924, 0.4158070484979053, 0.4471802740892482, 0.4742596630489124, 0.48670369303040933, 0.48978980691515334, 0.4806939179722212, 0.46494160578726684, 0.4395974066684001, 0.40361357656694347, 0.3608561626781448, 0.313579567437342, 0.26288033592465676, 0.21131869905451647, 0.16018509657376356, 0.11598470214271017, 0.0770261482199136, 0.04463785707219398, 0.018866333764633363, 0.005635358935532567, 0.00045046315458266656, 0.009193019675034286, 0.02785044287737289, 0.055651882834849016, 0.09164544224561115, 0.13647842166299148, 0.18417200108262002, 0.23384130900614986, 0.28415533302927615, 0.33558891960819853, 0.3802406343348637, 0.4208159398670614, 0.4557831893847602, 0.48125074081558844, 0.4950901336112481, 0.5009465742784179, 0.49099882295644104, 0.47366928345732107, 0.4486134550822887, 0.4125852064898335, 0.36875606490649715, 0.3204267247171718, 0.27150672237375373]
    oz_d = [0.2645501906083525, 0.21375597031882496, 0.16224913796517437, 0.1162559232554425, 0.07623439281588708, 0.044050707156103715, 0.018792319317806738, 0.005943875676076813, 0.0013508870965667054, 0.009295890338822384, 0.025719086796699937, 0.05512859814975333, 0.09034130508199524, 0.13270773987609163, 0.17904175381167012, 0.23027256945409968, 0.2814574930182517, 0.33272679555788204, 0.37724868386828636, 0.41923457234041916, 0.45258723182674054, 0.47688689659516165, 0.490330650604692, 0.4922844960694623, 0.4886462360625732, 0.4687729456524737, 0.4402034924663141, 0.4065274212990578, 0.3636411573785181, 0.31580384445299947, 0.2646207954555657, 0.21412507903305186, 0.16719057101763246, 0.11869811662222018, 0.07762036167296348, 0.043512539511599835, 0.020105496989927554, 0.006648906089131649, 0.0018599225325647906, 0.009949716162496049, 0.028708566529068755, 0.053873148051430356, 0.09025838193257033, 0.1330827737494652, 0.18062466966295454, 0.2314617752531226, 0.2848108548764225, 0.3320376723662607, 0.37935948946794545, 0.41880809985950884, 0.4538464634204346, 0.47844351954953396, 0.49257710924044934, 0.4927508210347215, 0.48856015151504595, 0.4720923540273435, 0.4433150239955976, 0.4078221148334936, 0.36544431930999005, 0.3183715846630805, 0.26477111950897275]
    oo_d = [0.22813236740181814, 0.27858093620136926, 0.3239248421614115, 0.36913304524432555, 0.41499141924436406, 0.4491338168225818, 0.4746347492660414, 0.48643047352974317, 0.49242392779138827, 0.48539715456304955, 0.4693707825328122, 0.4397882816566954, 0.40525292986108913, 0.3632048273539379, 0.3179373590882393, 0.2671975787971319, 0.21535594470177072, 0.16588662043957486, 0.12175570279415643, 0.0805476814163676, 0.04950163748291227, 0.023767213565119055, 0.011180131252716687, 0.01004422093271656, 0.016792680939805328, 0.034285175775849296, 0.061746593849273355, 0.09703295244289818, 0.1414703990719156, 0.1885384887841972, 0.23932405681394972, 0.2917908530459263, 0.34362667415334247, 0.38798705803448785, 0.42704298448604994, 0.4607581482175982, 0.4870517381322035, 0.4986779920917636, 0.5031140570081161, 0.4947039928398184, 0.47622386901198793, 0.45079600181157936, 0.4135343922688787, 0.369447540155249, 0.3221396042153757, 0.2707175033157619, 0.21781801914578713, 0.16939392182569685, 0.12229044614125754, 0.08243297694633193, 0.045848241305807336, 0.021161504492687853, 0.00578859663614538, 0.0028980498834719945, 0.010574569050708221, 0.025569272394445876, 0.0519356247363256, 0.08634908556653434, 0.1300133707456907, 0.17677329330135078, 0.2258483284953329]


    gamma_vec_a = reWriteVector(gamma_vec_a)
    beta_vec_a = reWriteVector(beta_vec_a)
    exp_mat_a = reWriteMatrix(exp_mat_a)

    gamma_vec_b = reWriteVector(gamma_vec_b)
    #beta_vec_b = reWriteVector(beta_vec_b) # For some reason the code is angry here, but gamma_beta so ugly solution nr. 100
    beta_vec_b = gamma_vec_b
    exp_mat_b = reWriteMatrix(exp_mat_b)

    gamma_vec_c = reWriteVector(gamma_vec_c)
    #beta_vec_c = reWriteVector(beta_vec_c) # same here 
    beta_vec_c = gamma_vec_c
    exp_mat_c = reWriteMatrix(exp_mat_c)

    gamma_vec_d = reWriteVector(gamma_vec_d)
    #beta_vec_d = reWriteVector(beta_vec_d) # im confused
    beta_vec_d = gamma_vec_d
    exp_mat_d = reWriteMatrix(exp_mat_d)

    gamma_vec = gamma_vec_b
    beta_vec = beta_vec_b

    # plotting matrix
    # plt.matshow(exp_mat, cmap = plt.get_cmap('PiYG'))  # We need to flip the matrix of we use the matshow
    # Do this by putting exp_mat[beta_resolution-1-j, i] = np.mean(expect(ham, state)) in for loops!) !
    fig, ax = plt.subplots(2,2, tight_layout = False)
    cs_a = ax[0,0].contourf(gamma_vec_a, beta_vec_a, exp_mat_a, 400, cmap=plt.get_cmap('PiYG'), vmin=-1, vmax=1, levels=np.linspace(-1,1,345))
    cs_b = ax[0,1].contourf(gamma_vec_b, beta_vec_b, exp_mat_b, 400, cmap=plt.get_cmap('PiYG'), vmin=-1, vmax=1, levels=np.linspace(-1,1,345))
    cs_c = ax[1,0].contourf(gamma_vec_c, beta_vec_c, exp_mat_c, 400, cmap=plt.get_cmap('PiYG'), vmin=-1, vmax=1, levels=np.linspace(-1,1,345))
    cs_d = ax[1,1].contourf(gamma_vec_d, beta_vec_d, exp_mat_d, 400, cmap=plt.get_cmap('PiYG'), vmin=-1, vmax=1, levels=np.linspace(-1,1,345))
    # This one plots the matrix with angles

    labels = ["0", "$\pi$/2", "$\pi$"]
    cbar = fig.colorbar(cs_b, ticks=np.linspace(-1,1,9), ax=ax)
    ticks = [gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]]
    #plt.setp(ax, xticks=ticks, xticklabels=labels, yticks=ticks, yticklabels=labels)
    plt.setp(ax[0,0], xticks=ticks, xticklabels=[], yticks=ticks, yticklabels=labels)
    plt.setp(ax[0,1], xticks=ticks, xticklabels=[], yticks=ticks, yticklabels=[])
    plt.setp(ax[1,0], xticks=ticks, xticklabels=labels, yticks=ticks, yticklabels=labels)
    plt.setp(ax[1,1], xticks=ticks, xticklabels=labels, yticks=ticks, yticklabels=[])
    
    

    #ax[0,0].set_title(f'Cost function F($\gamma$, \u03B2) for problem a')
    #ax[0,0].set_ylabel("\u03B2$_1$")
    ax[0,0].set_ylabel(r"$\beta_1$")    
    #plt.xticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
    #plt.yticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
    ax[0,0].text(0.05, 0.85, r'$\textbf{(a)}$', fontsize = 18, weight='bold', transform=ax[0,0].transAxes)

    #ax[0,1].set_title(f'Cost function F($\gamma$, \u03B2) for problem b')
    ax[0,1].text(0.05,0.85, r'$\textbf{(b)}$', fontsize = 18, weight='bold', transform=ax[0,1].transAxes)
    #plt.xticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
    #plt.yticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)

    #ax[1,0].set_title(f'Cost function F($\gamma$, \u03B2) for problem c')
    ax[1,0].set_xlabel("$\gamma_1$")
    #ax[1,0].set_ylabel("\u03B2$_1$")
    ax[1,0].set_ylabel(r"$\beta_1$")
    ax[1,0].text(0.05, 0.85, r'$\textbf{(c)}$', fontsize = 18, weight='bold', transform=ax[1,0].transAxes)
    #plt.xticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
    #plt.yticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)

    #ax[1,1].set_title(f'Cost function F($\gamma$, \u03B2) for problem d')
    ax[1,1].set_xlabel("$\gamma_1$")
    ax[1,1].text(0.05, 0.85, r'$\textbf{(d)}$', fontsize = 18, weight='bold', transform=ax[1,1].transAxes)
    #plt.xticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
    #plt.yticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)

    plt.show()
    fig.savefig("benchmarkplot.png", format="png", bbox_inches="tight")

    #coord_a = [22, 16]
    #coord_b = [44, 44]
    #coord_c = [15, 28]
    #coord_d = [37, 44]

    #cost_vec_a = [cost[coord_a[1]] for cost in exp_mat_a]
    #cost_vec_b = [cost[coord_b[1]] for cost in exp_mat_b]
    #cost_vec_c = [cost[coord_c[1]] for cost in exp_mat_c]
    #cost_vec_d = [cost[coord_d[1]] for cost in exp_mat_d]


    fig2, ax2 = plt.subplots(2,2)
    """
    for i in ax2[0,:]:
        for j in ax2[1,:]:
            print(j)
            handles, labels = j.get_legend_handles_labels()
            print(handles)
            print(labels)
            #j.legend(handles, labels, loc='upper center')
    """
    beta_vec = np.linspace(0,np.pi,61)
    ax2[0,0].set(xlim= (0,np.pi), ylim= (-1, 1))

    ax2[0,0].plot(beta_vec, cost_vec_a, 'o',markerfacecolor='none', markeredgecolor ="magenta", label=r"$F$")
    ax2[0,0].plot(beta_vec, zz_a, 'o',markerfacecolor='none', markeredgecolor ="orange", label=r"$P_{|00\rangle}$")
    ax2[0,0].plot(beta_vec, zo_a, 'o',markerfacecolor='none', markeredgecolor ="red", label=r"$P_{|01\rangle}$")
    ax2[0,0].plot(beta_vec, oz_a, 'o',markerfacecolor='none', markeredgecolor ="green", label=r"$P_{|10\rangle}$")
    ax2[0,0].plot(beta_vec, oo_a, 'o',markerfacecolor='none', markeredgecolor ="purple",  label=r"$P_{|11\rangle}$")

    ax2[0,0].text(0.05, 0.85, r'$\textbf{(a)}$', fontsize = 18, weight='bold', transform=ax2[0,0].transAxes)

    #ax2[0,0].set_xlabel(r"$\beta$")
    ax2[0,0].set_ylabel("$F,P$")


    #cost_vec_b.reverse() # reverses the list
    #zz_b.reverse()
    #zo_b.reverse()
    #oz_b.reverse()
    #oo_b.reverse()

    ax2[0,1].plot(beta_vec, cost_vec_b, 'o',markerfacecolor='none', markeredgecolor ="magenta", label="F")
    ax2[0,1].plot(beta_vec, zz_b, 'o',markerfacecolor='none', markeredgecolor ="orange", label="P(|00>)")
    ax2[0,1].plot(beta_vec, zo_b, 'o',markerfacecolor='none', markeredgecolor ="red", label="P(|01>)")
    ax2[0,1].plot(beta_vec, oz_b, 'o',markerfacecolor='none', markeredgecolor ="green", label="P(|10>)")
    ax2[0,1].plot(beta_vec, oo_b, 'o',markerfacecolor='none', markeredgecolor ="purple",  label="P(|11>)")

    ax2[0,1].text(0.05, 0.85, r'$\textbf{(b)}$', fontsize = 18, weight='bold', transform=ax2[0,1].transAxes)

    ax2[1,0].plot(beta_vec, cost_vec_c, 'o',markerfacecolor='none', markeredgecolor = "magenta", label="F")
    ax2[1,0].plot(beta_vec, zz_c, 'o',markerfacecolor='none', markeredgecolor = "orange", label="P(|00>)")
    ax2[1,0].plot(beta_vec, zo_c, 'o',markerfacecolor='none', markeredgecolor ="red", label="P(|01>)")
    ax2[1,0].plot(beta_vec, oz_c, 'o',markerfacecolor='none', markeredgecolor ="green", label="P(|10>)")
    ax2[1,0].plot(beta_vec, oo_c, 'o',markerfacecolor='none', markeredgecolor ="purple",  label="P(|11>)")
    ax2[1,0].set_xlabel(r"$\beta$")
    ax2[1,0].set_ylabel("$F,P$")


    ax2[1,0].text(0.05, 0.05, r'$\textbf{(c)}$', fontsize = 18, weight='bold', transform=ax2[1,0].transAxes)

    #cost_vec_d.reverse()
    #zz_d.reverse()
    #zo_d.reverse()
    #oz_d.reverse()
    #oo_d.reverse()

    ax2[1,1].plot(beta_vec, cost_vec_d, 'o',markerfacecolor='none', markeredgecolor ="magenta", label="F")
    ax2[1,1].plot(beta_vec, zz_d, 'o',markerfacecolor='none', markeredgecolor ="orange", label="P(|00>)")
    ax2[1,1].plot(beta_vec, zo_d, 'o',markerfacecolor='none', markeredgecolor ="red", label="P(|01>)")
    ax2[1,1].plot(beta_vec, oz_d, 'o',markerfacecolor='none', markeredgecolor ="green", label="P(|10>)")
    ax2[1,1].plot(beta_vec, oo_d, 'o',markerfacecolor='none', markeredgecolor ="purple",  label="P(|11>)")
    ax2[1,1].set_xlabel(r"$\beta$")

    ax2[1,1].text(0.05, 0.05, r'$\textbf{(d)}$', fontsize = 18, weight='bold', transform=ax2[1,1].transAxes)

    #ax2.legend()
    #ax2.set(xlim= (0,pi), ylim= (-1, 1))
    #Title if you want, uncomment then
    #ax2.set_title('Problem {problem}')
    #ax2.set_xlabel(r"$\beta$")
    #ax2.set_ylabel("Cost function or probability of occupation")

    xticks = [gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]]
    yticks = [-1,0,1]
    xlabels = ["0", "$\pi$/2", "$\pi$"]
    ylabels = ["-1", "0", "1"]
    #plt.setp(ax2, xticks=xticks, xticklabels=xlabels,yticks=yticks, yticklabels=ylabels) #,yticks=yticks, yticklabels=ylabels)
    plt.setp(ax2[0,0], xticks=xticks, xticklabels=[],yticks=yticks, yticklabels=ylabels) #,yticks=yticks, yticklabels=ylabels)
    plt.setp(ax2[0,1], xticks=xticks, xticklabels=[],yticks=yticks, yticklabels=[]) #,yticks=yticks, yticklabels=ylabels)
    plt.setp(ax2[1,0], xticks=xticks, xticklabels=xlabels,yticks=yticks, yticklabels=ylabels) #,yticks=yticks, yticklabels=ylabels)
    plt.setp(ax2[1,1], xticks=xticks, xticklabels=xlabels,yticks=yticks, yticklabels=[]) #,yticks=yticks, yticklabels=ylabels)


    """
    #handles, labels = ax2[1,1].get_legend_handles_labels()
    ax2[0,0].legend(loc='center')
    ax2[0,1].legend(loc='center')
    ax2[1,0].legend(loc='center')
    ax2[1,1].legend(loc='center')
    """
    handles, labels = ax2[0,0].get_legend_handles_labels()
    fig2.legend(handles, labels, loc='upper center',ncol=5)

    plt.show()
    fig2.savefig("betaplotbenchmark.png", format="png", bbox_inches="tight")
    fig2.savefig("betaplotbenchmark.pdf", format="pdf", bbox_inches="tight")
