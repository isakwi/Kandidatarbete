import numpy as np

'''Put in the correct file names for each run here'''
with open('plotdata_d_longrun.txt', 'r') as fa:   # OBS, correct the filename
    linesA = fa.readlines()
with open('plotdata_d_longrun.txt', 'r') as fb:   # OBS, correct the filename
    linesB = fb.readlines()
with open('plotdata_c_longrun2.txt', 'r') as fc:
    linesC = fc.readlines()
with open('plotdata_d_longrun.txt', 'r') as fd:
    linesD = fd.readlines()

gamma_vec =[]   # Should be the same for every run since we use 60x60 for all of them
for i in range(1,11):
    if i == 1:
        for j in range(0, 6):
            gamma_vec.append(float(linesD[1][13 + j * 11:13 + (j + 1) * 11]))
    else:
        for j in range(0, 6):
            gamma_vec.append(float(linesD[i][j * 11:(j + 1) * 11]))
beta_vec = gamma_vec  # (symmetrisk matris)

'''Read the exp_mats from the files'''
exp_mat_a = []   # Copy paste för exp_mat_a , b och c
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesA[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesA[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesA[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesA[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_a.append(row)
exp_mat_b = []
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesB[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesB[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesB[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesB[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_b.append(row)
exp_mat_c = []   # Copy paste för exp_mat_a , b och c
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesC[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesD[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesC[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesC[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_c.append(row)
exp_mat_d = []
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesD[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesD[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesD[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesD[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_d.append(row)


'''For beta plots we can just copy paste, they're already formated for some reason... 
and all elements aren't equally long so my reader got fucked :( '''


zz_d = [0.24654089709731616, 0.19559513207161405, 0.14693136472002907, 0.10270963371281115, 0.06484506770814599, 0.035150172838928906, 0.015131705369990374, 0.0057814254764033445, 0.007572556331217304, 0.02048625351619248, 0.044006131599324066, 0.07713545808875183, 0.11844223252667269, 0.16612079330917146, 0.21807413017148478, 0.272007133246693, 0.3255297465570598, 0.3762645514965413, 0.42195338476018, 0.4605590935192904, 0.4903573282248044, 0.5100139097377001, 0.5186452279322302, 0.5158579901318341, 0.5017670481438706, 0.47699039752645567, 0.4426214542589908, 0.400180026023652, 0.35154406094716645, 0.2988653280292405, 0.24447274705569233, 0.19076786289358252, 0.14011698767711214, 0.0947450686600559, 0.056635901422887, 0.027443330614156457, 0.008417289480743046, 0.00034814388370246193, 0.003531751072052037, 0.01775686238503819, 0.04231539005090969, 0.0760350858359415, 0.11733317764938386, 0.16428842789893885, 0.21472851390380113, 0.26632868674487625, 0.3167171440383507, 0.3635826679884469, 0.40477926808176995, 0.43842342695030334, 0.46297937107369014, 0.4773285717424302, 0.4808203501983926, 0.4733012691723913, 0.45512199817602755, 0.4271213608710672, 0.3905882351455075, 0.34720311047972047, 0.2989618300678318, 0.24808509209872365]
zo_d = [0.25679290853168835, 0.3098179521853094, 0.35957759600640377, 0.407251915226947, 0.45021103771428683, 0.48374735804517094, 0.5063294877937639, 0.5180682870305724, 0.5183955498570091, 0.5072307824905152, 0.4851909226251354, 0.4531834382800064, 0.41265089942500743, 0.3654051980565711, 0.31351328294581865, 0.2592907537210138, 0.2051232249259538, 0.15339373806266782, 0.10637850200736318, 0.0661240842198419, 0.03437628852213782, 0.012491182833997447, 0.0013766709528008278, 0.0014546833656435565, 0.012640647607523675, 0.03434954932586149, 0.06552205404810515, 0.10467524490004544, 0.14996791172229354, 0.19928619101835474, 0.25033999379066046, 0.3007652060443259, 0.3482333843170418, 0.39055622442503796, 0.42578463672529615, 0.4522981831109337, 0.4688780199620257, 0.4747616788040303, 0.4696788508005959, 0.4538628968761631, 0.42803974288783236, 0.39339679699894203, 0.3515270633994697, 0.30435794036578634, 0.2540645061577497, 0.20296876663245086, 0.15343650630578823, 0.10776857650471071, 0.06809609461373115, 0.036284691084291325, 0.013848056398692965, 0.001879595812688733, 0.0010019310117201615, 0.0113377723369109, 0.032503498939513535, 0.06362548205217948, 0.10337896795584654, 0.15004602220619723, 0.20159351613522172, 0.25576310448227846]
oz_d = [0.2222268066540806, 0.2716992108978424, 0.31871294698613417, 0.3639145077534394, 0.4043010234019246, 0.43585129738147793, 0.45731602592546894, 0.4684756990633861, 0.468771167418746, 0.4581723121231892, 0.43723096529025424, 0.40687694409868796, 0.3685258098338634, 0.3239534824387657, 0.27521331496852863, 0.22457281664934495, 0.17438089189526654, 0.1269784740348255, 0.08458749374108605, 0.04920641450313363, 0.022524434072914764, 0.005840007691488243, 3.292911314142321e-06, 0.005375951594855528, 0.02181393508393294, 0.04867249519417741, 0.08483482092235406, 0.12876080942937568, 0.17855554165327822, 0.2320547492177142, 0.2869197922647219, 0.3407445274547301, 0.3911614518834934, 0.43594830875541873, 0.47312904822941226, 0.5010599650208672, 0.5185064413684484, 0.5246963641222299, 0.5193551262367704, 0.5027195326698147, 0.47552452203308854, 0.43897277317394046, 0.3946792924002451, 0.3445987205573171, 0.29093916653436985, 0.23606107084183942, 0.18237302279724904, 0.13222314659665313, 0.08779361711939923, 0.051004005771229884, 0.023424658128615952, 0.006207410595518249, 3.4479450698726786e-05, 0.005088669426874526, 0.021046279794862795, 0.04709278019541546, 0.08196069426558417, 0.12398760738578452, 0.17119267116568823, 0.22136643204053627]
oo_d = [0.27443640575072165, 0.21822731713386134, 0.16449455273016533, 0.11832723552910626, 0.078459413226215, 0.04516615702029355, 0.0210494777901499, 0.007594391330483785, 0.00525205498733094, 0.01406540106810666, 0.03356241144047339, 0.06279214396199903, 0.10036452784370813, 0.1445173994728838, 0.1931884983524432, 0.24412261506910002, 0.2949621286789581, 0.3433551559341524, 0.3870771698930154, 0.4241052701520432, 0.4527364679814951, 0.4716518626512054, 0.4799695119769676, 0.4773076274386456, 0.46377478603040023, 0.43998291104952675, 0.40701858805544594, 0.36637988323788706, 0.31992869527108175, 0.26979056333026397, 0.21826345957383086, 0.16771916034092033, 0.12048471704975679, 0.07874674968916551, 0.04444728104227673, 0.019194955099022654, 0.004194942366125961, 0.0001905637879816412, 0.007430834530862848, 0.025657527125770425, 0.054117026626685355, 0.0915920837046929, 0.13645725515574175, 0.18675165578115802, 0.2402646176423293, 0.2946382481812942, 0.3474701680134234, 0.396422389108153, 0.43932786468556384, 0.4742847336840911, 0.4997446953131164, 0.5145813553607406, 0.5181400353720411, 0.5102691589125898, 0.49132516067248794, 0.4621571464923969, 0.424069079086646, 0.37876011501318824, 0.3282488273110632, 0.2747823773461914]

