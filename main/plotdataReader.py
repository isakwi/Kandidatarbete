import numpy as np
from matplotlib import pyplot as plt

'''Put in the correct file names for each run here'''
with open('plotdata_d_longrun.txt', 'r') as fa:   # OBS, correct the filename
    linesA = fa.readlines()
with open('plotdata_b_longrun.txt', 'r') as fb:   # OBS, correct the filename
    linesB = fb.readlines()
with open('plotdata_c_longrun2.txt', 'r') as fc:
    linesC = fc.readlines()
with open('plotdata_d_longrun.txt', 'r') as fd:
    linesD = fd.readlines()

gamma_vec =[]   # Should be the same for every run since we use 60x60 for all of them
for i in range(1,11):
    if i == 1:
        for j in range(0, 6):
            gamma_vec.append(float(linesD[1][13 + j * 11:13 + (j + 1) * 11]))
    else:
        for j in range(0, 6):
            gamma_vec.append(float(linesD[i][j * 11:(j + 1) * 11]))
beta_vec = gamma_vec  # (symmetrisk matris)

'''Read the exp_mats from the files'''
exp_mat_a = []   # Copy paste för exp_mat_a , b och c
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesA[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesA[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesA[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesA[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_a.append(row)
exp_mat_b = []
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesB[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesB[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesB[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesB[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_b.append(row)
exp_mat_c = []   # Copy paste för exp_mat_a , b och c
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesC[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesD[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesC[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesC[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_c.append(row)
exp_mat_d = []
for k in range(1,61):
    row = []
    for i in range(21+15*(k-1),21+15*k):
        if i == 21:
            for j in range(0, 4):
                row.append(float(linesD[i][12 + j * 16:12 + (j + 1) * 16]))
        elif i in np.linspace(21,921, 61):
            row.append(float(linesD[i][2:17]))
            for j in range(1, 4):
                row.append(float(linesD[i][1 + j * 16:1 + (j + 1) * 16]))
        else:
            for j in range(0, 4):
                row.append(float(linesD[i][1 + j * 16:1 + (j + 1) * 16]))
    exp_mat_d.append(row)


'''For beta plots we can just copy paste, they're already formated for some reason... 
and all elements aren't equally long so my reader got fucked :( '''

zz_b = [0.25341486979092476, 0.27713315237722597, 0.49226413572464595, 0.32096695680523735, 0.3406855270688071, 0.35882611871930126, 0.37517471573942623, 0.389532094722206, 0.4018104673474598, 0.41198165121801594, 0.42003142937319865, 0.4259656499463284, 0.4298131661464976, 0.4316178663061823, 0.43143526485571754, 0.42932888253389684, 0.42536632226133786, 0.4196169658364453, 0.4121500579592588, 0.40303370958051427, 0.3923350886909117, 0.3801211956554147, 0.36646065099628705, 0.35142606318223263, 0.33509687533393373, 0.3175625891716638, 0.29892597380658525, 0.2793062186989143, 0.2588416150064276, 0.2376917005446173, 0.21603866717599576, 0.19408770319822244, 0.17206645384167388, 0.15022325184727348, 0.12882428104322982, 0.10814963381253606, 0.08848838785655432, 0.07013277613037841, 0.05337178800690279, 0.038484222336514974, 0.025731537406938315, 0.015350816212423499, 0.007547992341428364, 0.002491667693230116, 0.00030777620801662834, 0.0010752483938694475, 0.004822907273797163, 0.01152770802578125, 0.021114394706336703, 0.0334566147032287, 0.04837945588340198, 0.06566328634241167, 0.08504889564481798, 0.1062435304720938, 0.12892781842027223, 0.15276324311099382, 0.17739989202746975, 0.20248427649147396, 0.22766688382847694, 0.25260922753056514]
zo_b = [0.2496690416342947, 0.27774813126343895, 0.49166389274989003, 0.33633591165385107, 0.3676398732917588, 0.39714962369081513, 0.42493706107715595, 0.4513937131057642, 0.4760157243789668, 0.49841407057419823, 0.5183168124506128, 0.5353520007465159, 0.549248129637702, 0.5597707297488879, 0.5667072494914368, 0.5699327410066934, 0.569362006857071, 0.5649742302803491, 0.5568224784885363, 0.545008931317956, 0.5297067332789808, 0.5111440711235521, 0.4895975205867377, 0.4653966025177815, 0.4389037649800861, 0.4105143674011693, 0.3806466579212425, 0.3497285602141962, 0.31819508411307856, 0.2864746372253044, 0.25498303090643143, 0.22411729014663398, 0.19424680500588332, 0.1657109738855406, 0.13881388932664876, 0.11382194290918252, 0.09096341125379187, 0.0704272841670687, 0.05236510356738474, 0.036892581467499554, 0.024092131188335517, 0.01401631646091866, 0.006691098839992211, 0.002119469780834726, 0.0002848459935384453, 0.001154119952307873, 0.004680247707033109, 0.010804204660051938, 0.019456238584066334, 0.03055643384031917, 0.04401441417288384, 0.05972858720693444, 0.07758465821008244, 0.09745368314637147, 0.11919018960790002, 0.14262960023145066, 0.16758655642218362, 0.19385302428234233, 0.22119691542542633, 0.24936212438098723]
oz_b = [0.25109821165267754, 0.22068120035484817, 0.005521706039286975, 0.16461493823492887, 0.13977151685176858, 0.1158832016604556, 0.09363610088502278, 0.07357666086269705, 0.055788759864099986, 0.040371104191357574, 0.027416989835838384, 0.016963757165698194, 0.009035511960378127, 0.003632545059610856, 0.0007362270775810005, 0.00031602621907817033, 0.002329558936452676, 0.00672685014909089, 0.013450467809843108, 0.022438092899923694, 0.03362076158703119, 0.04692275874825798, 0.06226085857398306, 0.07953991166685341, 0.09865290164471238, 0.119476337513002, 0.14186741733796293, 0.1656631668247396, 0.19067556570113278, 0.21669229311890975, 0.24347514929245326, 0.27075928794104576, 0.2982568491554514, 0.3256568755997153, 0.35263035485566463, 0.3788351299486051, 0.4039197348133602, 0.4275323908105393, 0.4493261389652905, 0.4689669779381063, 0.486142692355098, 0.5005683877615829, 0.5119958644561903, 0.5202191364304565, 0.5250799190023503, 0.5264737390890433, 0.5243514603619183, 0.5187226411406228, 0.5096556756988673, 0.4972759406639928, 0.48176469147039624, 0.46335374874963875, 0.4423208665498152, 0.4189836962707563, 0.39369161963166244, 0.3668190238725281, 0.33875631679625656, 0.3099017901504499, 0.28065397271953846, 0.2514032169700782]
oo_b = [0.24581685168224854, 0.2199483572782829, 0.005705704446249826, 0.17186848359536908, 0.1504482789712434, 0.12809536120972684, 0.10607824265009438, 0.08543494905203555, 0.0663784534355164, 0.04920232728834133, 0.03422889530446035, 0.021711698005700664, 0.01189409985471292, 0.004977254094881785, 0.001116097125318221, 0.00041917499317166743, 0.002940307503795774, 0.008678566597910562, 0.017575441469915434, 0.02951720173321219, 0.0443352946994087, 0.06181063765217961, 0.08167904658837329, 0.10363594879846064, 0.12734502938172407, 0.15244510903902034, 0.1785586657847542, 0.20530062502645013, 0.23228638852367747, 0.25914009274674077, 0.2855018289327343, 0.31103446908294374, 0.3354286374372213, 0.3584076708427809, 0.37973024615716966, 0.3991921021065927, 0.41662726932361216, 0.43190635420833545, 0.44493582620139505, 0.45565502570377264, 0.46403250026691606, 0.4700633403955148, 0.4737638757622416, 0.47516862695850404, 0.47432630638255896, 0.47129576805423656, 0.4661442902517045, 0.4589442998027033, 0.4497726063038273, 0.4387099033981133, 0.4258403160618343, 0.4112533066612221, 0.3950444654943701, 0.3773179984431581, 0.3581892990578114, 0.33778702091647533, 0.3162561654018408, 0.2937598278670482, 0.2704811294595484, 0.24662437606089116]


zz_d = [0.24654089709731616, 0.19559513207161405, 0.14693136472002907, 0.10270963371281115, 0.06484506770814599, 0.035150172838928906, 0.015131705369990374, 0.0057814254764033445, 0.007572556331217304, 0.02048625351619248, 0.044006131599324066, 0.07713545808875183, 0.11844223252667269, 0.16612079330917146, 0.21807413017148478, 0.272007133246693, 0.3255297465570598, 0.3762645514965413, 0.42195338476018, 0.4605590935192904, 0.4903573282248044, 0.5100139097377001, 0.5186452279322302, 0.5158579901318341, 0.5017670481438706, 0.47699039752645567, 0.4426214542589908, 0.400180026023652, 0.35154406094716645, 0.2988653280292405, 0.24447274705569233, 0.19076786289358252, 0.14011698767711214, 0.0947450686600559, 0.056635901422887, 0.027443330614156457, 0.008417289480743046, 0.00034814388370246193, 0.003531751072052037, 0.01775686238503819, 0.04231539005090969, 0.0760350858359415, 0.11733317764938386, 0.16428842789893885, 0.21472851390380113, 0.26632868674487625, 0.3167171440383507, 0.3635826679884469, 0.40477926808176995, 0.43842342695030334, 0.46297937107369014, 0.4773285717424302, 0.4808203501983926, 0.4733012691723913, 0.45512199817602755, 0.4271213608710672, 0.3905882351455075, 0.34720311047972047, 0.2989618300678318, 0.24808509209872365]
zo_d = [0.25679290853168835, 0.3098179521853094, 0.35957759600640377, 0.407251915226947, 0.45021103771428683, 0.48374735804517094, 0.5063294877937639, 0.5180682870305724, 0.5183955498570091, 0.5072307824905152, 0.4851909226251354, 0.4531834382800064, 0.41265089942500743, 0.3654051980565711, 0.31351328294581865, 0.2592907537210138, 0.2051232249259538, 0.15339373806266782, 0.10637850200736318, 0.0661240842198419, 0.03437628852213782, 0.012491182833997447, 0.0013766709528008278, 0.0014546833656435565, 0.012640647607523675, 0.03434954932586149, 0.06552205404810515, 0.10467524490004544, 0.14996791172229354, 0.19928619101835474, 0.25033999379066046, 0.3007652060443259, 0.3482333843170418, 0.39055622442503796, 0.42578463672529615, 0.4522981831109337, 0.4688780199620257, 0.4747616788040303, 0.4696788508005959, 0.4538628968761631, 0.42803974288783236, 0.39339679699894203, 0.3515270633994697, 0.30435794036578634, 0.2540645061577497, 0.20296876663245086, 0.15343650630578823, 0.10776857650471071, 0.06809609461373115, 0.036284691084291325, 0.013848056398692965, 0.001879595812688733, 0.0010019310117201615, 0.0113377723369109, 0.032503498939513535, 0.06362548205217948, 0.10337896795584654, 0.15004602220619723, 0.20159351613522172, 0.25576310448227846]
oz_d = [0.2222268066540806, 0.2716992108978424, 0.31871294698613417, 0.3639145077534394, 0.4043010234019246, 0.43585129738147793, 0.45731602592546894, 0.4684756990633861, 0.468771167418746, 0.4581723121231892, 0.43723096529025424, 0.40687694409868796, 0.3685258098338634, 0.3239534824387657, 0.27521331496852863, 0.22457281664934495, 0.17438089189526654, 0.1269784740348255, 0.08458749374108605, 0.04920641450313363, 0.022524434072914764, 0.005840007691488243, 3.292911314142321e-06, 0.005375951594855528, 0.02181393508393294, 0.04867249519417741, 0.08483482092235406, 0.12876080942937568, 0.17855554165327822, 0.2320547492177142, 0.2869197922647219, 0.3407445274547301, 0.3911614518834934, 0.43594830875541873, 0.47312904822941226, 0.5010599650208672, 0.5185064413684484, 0.5246963641222299, 0.5193551262367704, 0.5027195326698147, 0.47552452203308854, 0.43897277317394046, 0.3946792924002451, 0.3445987205573171, 0.29093916653436985, 0.23606107084183942, 0.18237302279724904, 0.13222314659665313, 0.08779361711939923, 0.051004005771229884, 0.023424658128615952, 0.006207410595518249, 3.4479450698726786e-05, 0.005088669426874526, 0.021046279794862795, 0.04709278019541546, 0.08196069426558417, 0.12398760738578452, 0.17119267116568823, 0.22136643204053627]
oo_d = [0.27443640575072165, 0.21822731713386134, 0.16449455273016533, 0.11832723552910626, 0.078459413226215, 0.04516615702029355, 0.0210494777901499, 0.007594391330483785, 0.00525205498733094, 0.01406540106810666, 0.03356241144047339, 0.06279214396199903, 0.10036452784370813, 0.1445173994728838, 0.1931884983524432, 0.24412261506910002, 0.2949621286789581, 0.3433551559341524, 0.3870771698930154, 0.4241052701520432, 0.4527364679814951, 0.4716518626512054, 0.4799695119769676, 0.4773076274386456, 0.46377478603040023, 0.43998291104952675, 0.40701858805544594, 0.36637988323788706, 0.31992869527108175, 0.26979056333026397, 0.21826345957383086, 0.16771916034092033, 0.12048471704975679, 0.07874674968916551, 0.04444728104227673, 0.019194955099022654, 0.004194942366125961, 0.0001905637879816412, 0.007430834530862848, 0.025657527125770425, 0.054117026626685355, 0.0915920837046929, 0.13645725515574175, 0.18675165578115802, 0.2402646176423293, 0.2946382481812942, 0.3474701680134234, 0.396422389108153, 0.43932786468556384, 0.4742847336840911, 0.4997446953131164, 0.5145813553607406, 0.5181400353720411, 0.5102691589125898, 0.49132516067248794, 0.4621571464923969, 0.424069079086646, 0.37876011501318824, 0.3282488273110632, 0.2747823773461914]

# Tested to plot one of the problems, just to make sure everything worked
problem = 'd'

fig, ax = plt.subplots()
cs = ax.contourf(gamma_vec, beta_vec, exp_mat_d, 400, cmap=plt.get_cmap('PiYG'), vmin=-1, vmax=1, levels=np.linspace(-1,1,345))
# This one plots the matrix with angles
cbar = fig.colorbar(cs, ticks=np.linspace(-1,1,9))
ax.set_title(f'Cost function F($\gamma$, \u03B2) for problem {problem}')
ax.set_xlabel("$\gamma_1$")
ax.set_ylabel("\u03B2$_1$")
labels = ["0", "$\pi$/2", "$\pi$"]
plt.xticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
plt.yticks([gamma_vec[0], (gamma_vec[-1] + gamma_vec[0])/2, gamma_vec[-1]], labels)
plt.show()